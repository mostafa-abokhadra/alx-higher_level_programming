# test 1
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# test 2
>>> matrix = [[1, 2, 3], [4, 5, 6]]

>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# test 3
>>> matrix = []

>>> matrix_divided(matrix, 3)
[]

# test 4
>>> matrix = [[], [], []]

>>> matrix_divided(matrix, 3)
[[], [], []]

# test 5
>>> matrix = [[3, 6, 9]]

>>> matrix_divided(matrix, 3)
[[1.0, 2.0, 3.0]]

# test 6
>>> matrix = [[3, 6, 9], []]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

# test 7
>>> matrix = [[3, 6, 9], [1, 2]]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

# test 8
>>> matrix = [[3, 6, 9], [27, 21, 24]]

>>> matrix_divided(matrix, 3)
[[1.0, 2.0, 3.0], [9.0, 7.0, 8.0]]

# test 9
>>> matrix = [[3, 6, 9], [27, "string!", 24]]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test 10
>>> matrix = [[3, 6, 9], [27, "string!"]]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test 11
>>> matrix = [[3, 6, 9], [21, 27, 24]]

>>> matrix_divided(matrix, "ok")
Traceback (most recent call last):
TypeError: div must be a number

# test 12
>>> matrix = [[3, 6, 9], [21, 27, 24]]

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

# test 13
>>> matrix = [99]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test 14
>>> matrix = [[27], [30]]

>>> matrix_divided(matrix, 3)
[[9.0], [10.0]]

# test 15
>>> matrix = [[27], [30], {1: 77}]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

